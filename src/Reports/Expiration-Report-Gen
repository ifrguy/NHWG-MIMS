#!/bin/bash -e
## Copyright 2025 Marshall E. Giguere
##
##   Licensed under the Apache License, Version 2.0 (the "License");
##   you may not use this file except in compliance with the License.
##   You may obtain a copy of the License at
##
##       https://www.apache.org/licenses/LICENSE-2.0
##
##   Unless required by applicable law or agreed to in writing, software
##   distributed under the License is distributed on an "AS IS" BASIS,
##   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
##   See the License for the specific language governing permissions and
##   limitations under the License.


# Prepare expiration reports for command staff.
# Then mail to the command staff mailing list.

# History:
# 07Dec24 DJL Consolidate configuration files for single point changes.
# 29Aug23 MEG Upgraded to mongosh, DB passed to script on command line.
# 17Sep20 MEG Upload files to shared drive, only emails links to mailing list.
# 17Sep20 MEG Moved all user vars to config file.
# 06Jul19 MEG Correct sendemail message syntax.
# 25Nov18 MEG Added options to change mailing list and message.
# 24Oct18 MEG Added option to skip sending emails.
# 02Oct18 MEG Added Home Phone to report.
# 01Oct18 MEG Created.
#

# Load config file
. ../getConfigValue

# General configuration
WING=$(getConfigValue "wing")
DB=$(getConfigValue "mongoDb.db")
MAILTO=$(getConfigValue "reports.Expiration.mailTo")
MESSAGE=$(getConfigValue "reports.Expiration.emailTemplate")
SHAREDDRIVE=$(getConfigValue "reports.Expiration.sharedDrive")
DRIVEFOLDER=$(getConfigValue "reports.Expiration.driveFolder")

# Report generator MongoDB login credentials
USERID=$(getConfigValue "reporter.user" "credentials.json")
PASSWD=$(getConfigValue "reporter.password" "credentials.json")

# make sure we are in the proper working directory
cd $(getConfigValue "mimsSourceTopDir")/Reports

# File ID's. Contains the immuteable Google file id for each file uploaded,
# keyed by the basename of the file from the $REPORTS list
declare -A FILEID

# cmd line options
OPTS="h?l:m:n"

USAGE="Usage: $(basename $0) [$OPTS]\n
\tCreate and mail member expiration reports\n
\th|? - this help\n
\tl - mailing list filename ($MAILTO)\n
\tm - new message or message file ($MESSAGE)\n
\tn - No email - skip sending report to mailing list\n
"
# Make date stamp
DATESTAMP=$(date +%Y%m%d)

while getopts $OPTS o; do
    case $o in
	l) MAILTO=OPTARG;;
	m) MESSAGE=OPTARG;;
	n) NOEMAIL="true";;
	h|?) echo -e $USAGE;exit 1;;
	*) echo -e $USAGE;exit 1;;
    esac
done
shift $(($OPTIND - 1))

echo "Preparing expired membership reports"

for r in $REPORTS; do
    echo "Preparing $r report"
    fn=$DATESTAMP-$r.csv
    mongosh --quiet -u $USERID -p $PASSWD --authenticationDatabase $DB $DB $r.js >$fn
# upload the file and save id
    FILEID[$r]=$(gam user $ASUSER create drivefile \
		     teamdriveparent "$SHAREDDRIVE" \
		     teamdriveparentname "$DRIVEFOLDER" \
		     drivefilename "$fn" localfile "$fn" returnidonly)
# clean up local file
    /bin/rm $fn
done

# If -n switch don't send reports
[[ -v NOEMAIL ]] && exit 1

echo "Sending reports."
# Use GAM to email reports to commanders mailing list
WING=$(getConfigValue "wing")
gam sendemail file $MAILTO subject "$WING:Monthly Expiration Reports" $MESSAGE replace expired ${FILEID[Expired]} replace 30Day ${FILEID[Expiring30Days]} replace 60Day ${FILEID[Expiring60Days]}
echo Done.
